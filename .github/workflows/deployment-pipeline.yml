name: deployment-pipeline
on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  Checkout:
    name: Checkout
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
        name: CheckoutRepository
  
      - uses: actions/upload-artifact@v4.6.2
        name: UploadCheckoutArtifact
        with:
          name: webapp
          path: 'webapp'
      - run: ls -R 'webapp'

  AuthenticateAndDeploy:
    name: GCPAuthenticationandDeploy
    runs-on: ubuntu-latest
    needs: Checkout
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: google-github-actions/auth@v2.1.4
        name: AuthenticateGCP
        with:
          workload_identity_provider: '${{ secrets.GCP_WORKLOAD_IDENTITY_ID }}'
          service_account: '${{ secrets.GCP_SERVICE_ACCOUNT}}'

      - uses: actions/download-artifact@v4.3.0
        name: Download Artifact
        with:
          name: webapp
          path: 'webapp'
      - run: ls -R 'webapp'

      - uses: google-github-actions/upload-cloud-storage@v2.2.2
        name: UploadtoGCS
        with:
          path: 'webapp'
          destination: 'rng-personal'
          parent: false

      - uses: google-github-actions/ssh-compute@v1.1.3
        name: UploadtoGCPVMInstance
        with:
          instance_name: '${{ secrets.GCP_APACHE_INSTANCE_NAME }}'
          zone: 'us-east1-c'
          ssh_private_key: '${{ secrets.GCP_SSH_PRIVATE_KEY }}'
          command: |
                echo "Starting deployment"
                TMP_CLONE_DIR="/tmp/${{ secrets.GCP_APACHE_INSTANCE_NAME }}"
                echo "Cloning repository into ${TMP_CLONE_DIR}"
                git clone --depth 1 "https://${{ secrets.GCP_GITHUB_DEPLOYMENT_TOKEN }}@github.com/${{ secrets.GCP_APACHE_INSTANCE_SERVER_GITHUB_PROJECT_URL }}" "${TMP_CLONE_DIR}"
                echo "Clearing existing content from Apache "
                sudo rm -rf *
                echo "Moving new content ${TMP_CLONE_DIR}}/webapp"
                sudo mv "${TMP_CLONE_DIR}/webapp"/* "/var/www/html/"
                sudo chown -R www-data:www-data *
                echo "Cleaning up temporary clone directory"
                rm -rf "${TMP_CLONE_DIR}"
                echo "Deployment Done"
                
